theme(panel.grid.minor.y = element_blank(),axis.text.x = element_text(face = "bold"),legend.position = "none"
)
# Make the plot
ggplot(plot_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=IBOCA)) +
geom_rect(aes(ymax=0, ymin=6, xmax=4, xmin=1),fill="darkblue",alpha=0.3)+
geom_rect(col="white")+
scale_fill_manual(values = c("Green","Yellow","Orange","Red"),drop=FALSE)+
scale_y_continuous(breaks = c(1:24),labels = paste0(c(1:24),"h"))+
coord_polar(theta = "y",start = pi)+
labs(title = "Pronóstico de Calidad de Aire")+
scale_x_continuous(labels = NULL,limits = c(0.5, 4))+theme_minimal()+
theme(panel.grid.minor.y = element_blank(),axis.text.x = element_text(face = "bold"),legend.position = "none"
)
# Make the plot
ggplot(plot_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=IBOCA)) +
geom_rect(aes(ymax=0, ymin=6, xmax=4, xmin=1),fill="blue",alpha=0.3)+
geom_rect(col="white")+
scale_fill_manual(values = c("Green","Yellow","Orange","Red"),drop=FALSE)+
scale_y_continuous(breaks = c(1:24),labels = paste0(c(1:24),"h"))+
coord_polar(theta = "y",start = pi)+
labs(title = "Pronóstico de Calidad de Aire")+
scale_x_continuous(labels = NULL,limits = c(0.5, 4))+theme_minimal()+
theme(panel.grid.minor.y = element_blank(),axis.text.x = element_text(face = "bold"),legend.position = "none"
)
# Make the plot
ggplot(plot_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=IBOCA)) +
geom_rect(aes(ymax=0, ymin=6, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(col="white")+
scale_fill_manual(values = c("Green","Yellow","Orange","Red"),drop=FALSE)+
scale_y_continuous(breaks = c(1:24),labels = paste0(c(1:24),"h"))+
coord_polar(theta = "y",start = pi)+
labs(title = "Pronóstico de Calidad de Aire")+
scale_x_continuous(labels = NULL,limits = c(0.5, 4))+theme_minimal()+
theme(panel.grid.minor.y = element_blank(),axis.text.x = element_text(face = "bold"),legend.position = "none"
)
# Make the plot
ggplot(plot_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=IBOCA)) +
geom_rect(aes(ymax=0, ymin=6, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=18, ymin=24, xmax=4, xmin=1),fill="blue",alpha=0.1)
# Make the plot
ggplot(plot_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=IBOCA)) +
geom_rect(aes(ymax=0, ymin=6, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=18, ymin=24, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(col="white")+
scale_fill_manual(values = c("Green","Yellow","Orange","Red"),drop=FALSE)+
scale_y_continuous(breaks = c(1:24),labels = paste0(c(1:24),"h"))+
coord_polar(theta = "y",start = pi)+
labs(title = "Pronóstico de Calidad de Aire")+
scale_x_continuous(labels = NULL,limits = c(0.5, 4))+theme_minimal()+
theme(panel.grid.minor.y = element_blank(),axis.text.x = element_text(face = "bold"),legend.position = "none"
)
# Make the plot
ggplot(plot_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=IBOCA)) +
geom_rect(aes(ymax=0, ymin=6, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=18, ymin=24, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=6, ymin=18, xmax=4, xmin=1),fill="lightblue",alpha=0.1)+
geom_rect(col="white")+
scale_fill_manual(values = c("Green","Yellow","Orange","Red"),drop=FALSE)+
scale_y_continuous(breaks = c(1:24),labels = paste0(c(1:24),"h"))+
coord_polar(theta = "y",start = pi)+
labs(title = "Pronóstico de Calidad de Aire")+
scale_x_continuous(labels = NULL,limits = c(0.5, 4))+theme_minimal()+
theme(panel.grid.minor.y = element_blank(),axis.text.x = element_text(face = "bold"),legend.position = "none"
)
# Make the plot
ggplot(plot_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=IBOCA)) +
geom_rect(aes(ymax=0, ymin=6, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=18, ymin=24, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=6, ymin=18, xmax=4, xmin=1),fill="lightblue",alpha=0.1)+
geom_rect(col="white")+
scale_fill_manual(values = c("Green","Yellow","Orange","Red"),drop=FALSE)+
scale_y_continuous(breaks = c(1:24),labels = paste0(c(1:24),"h"))+
coord_polar(theta = "y",start = pi)+
labs(title = "Pronóstico de Calidad de Aire")+
scale_x_continuous(labels = NULL,limits = c(0.5, 4))+theme_minimal()+
theme(panel.grid.minor.y = element_blank(),axis.text.x = element_text(face = "bold"),legend.position = "none"
)+coord_equal()
# Make the plot
ggplot(plot_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=IBOCA)) +
geom_rect(aes(ymax=0, ymin=6, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=18, ymin=24, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=6, ymin=18, xmax=4, xmin=1),fill="lightblue",alpha=0.1)+
geom_rect(col="white")+
scale_fill_manual(values = c("Green","Yellow","Orange","Red"),drop=FALSE)+
scale_y_continuous(breaks = c(1:24),labels = paste0(c(1:24),"h"))+
coord_polar(theta = "y",start = pi)+
labs(title = "Pronóstico de Calidad de Aire")+
scale_x_continuous(labels = NULL,limits = c(0.5, 4))+theme_minimal()+
theme(panel.grid.minor.y = element_blank(),axis.text.x = element_text(face = "bold"),legend.position = "none"
)
# Make the plot
a<-ggplot(plot_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=IBOCA)) +
geom_rect(aes(ymax=0, ymin=6, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=18, ymin=24, xmax=4, xmin=1),fill="blue",alpha=0.1)+
geom_rect(aes(ymax=6, ymin=18, xmax=4, xmin=1),fill="lightblue",alpha=0.1)+
geom_rect(col="white")+
scale_fill_manual(values = c("Green","Yellow","Orange","Red"),drop=FALSE)+
scale_y_continuous(breaks = c(1:24),labels = paste0(c(1:24),"h"))+
coord_polar(theta = "y",start = pi)+
labs(title = "Pronóstico de Calidad de Aire")+
scale_x_continuous(labels = NULL,limits = c(0.5, 4))+theme_minimal()+
theme(panel.grid.minor.y = element_blank(),axis.text.x = element_text(face = "bold"),legend.position = "none"
)
output$Pronostico <- plotOutput(a)
runApp()
output$Pronostico <- plotOutput(a)
runApp()
runApp()
runApp()
output$Pronostico <- renderPlot(a,res = 250)
runApp()
runApp()
ui <- fluidPage(div(class="outer",
tags$head(
# Include our custom CSS
includeCSS("styles.css"),
includeScript("gomap.js")
),
leafletOutput("map", width="100%", height="100%"),
absolutePanel(id = "controls", class = "panel panel-default", fixed = TRUE,
draggable = TRUE, top = 60, left = "auto", right = 20, bottom = "auto",
width = 330, height = "auto",
h1("Aire al Parque"),
hr(),
br(),
p(strong("Consulta de pronostico")),
actionButton("recalc", "Actualizar Pronostico"),
br(),
plotOutput("Pronostico", width = 250, height = 250)
)
))
runApp()
parques <- readOGR("www/parques_seleccionados.shp",
layer = "parques", GDAL1_integer64_policy = TRUE)
parques <- readOGR("www/parques_seleccionados.shp",
layer = "parques_seleccionados", GDAL1_integer64_policy = TRUE)
runApp()
parques <- readOGR("www/parques_seleccionados.shp",
layer = "parques_seleccionados", GDAL1_integer64_policy = TRUE)
# Loading correspondencia de parques y canarios
parques_canarios <- read_csv("parques_canarios.csv",
col_types = cols(ID_PARQUE = col_character(),
NOMBRE_PAR = col_character(), CODIGOPOT = col_skip(),
TIPOPARQUE = col_character(), LOCNOMBRE = col_character(),
Long = col_double(), Lat = col_double(),
Canario = col_character()))
View(parques_canarios)
runApp()
runApp()
runApp()
View(parques_canarios)
runApp()
runApp()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)
Forecast_update<-function(){
# Process hourly medians
DB_parques<-do.call(rbind,lapply(Sites, function(x){
adj_day<-NULL
tryCatch({
data<-get_CanAirIO(x,days = 24)%>%
select(time,pm25)%>%
rename(date=time)%>%
mutate(pm25=ifelse(pm25>1e5,NA,pm25)) # Readings above 1e5 are discarded
qxts <- xts(data[,-1], order.by=data[,1])
hqxts<-period.apply(qxts, endpoints(qxts, "hours"), median,na.rm = TRUE)
hqxts<-xts::align.time(hqxts,3600)
summ_data<-data.frame(date=index(hqxts),pm25=coredata(hqxts))
Observed_trends<-openair::timeVariation(summ_data,pollutant = "pm25",main=x,local.tz = "America/Bogota",)
obs_hour<-Observed_trends$data$hour
obs_day<-Observed_trends$data$day
date_for_adj <-force_tz(Sys.Date()-ifelse(hour(force_tz(Sys.time(),
tzone = "America/Bogota"))<6,1,0),
tzone = "America/Bogota")
#Calculating the median for the current day or the day before if it is earlier than 6:00 am GMT-5
ref_median<-median(summ_data$pm25[summ_data$date>date_for_adj])
if(hour(force_tz(Sys.time(),
tzone = "America/Bogota"))<6){
ref_day<-match(weekdays(force_tz(Sys.Date()-ifelse(hour(force_tz(Sys.time(),
tzone = "America/Bogota"))<6,1,0),
tzone = "America/Bogota"),abbreviate = TRUE),table = c("Mon","Tue","Wed","Thu","Fri","Sat","Sun"))
fut_day<-ifelse(ref_day==7,1,ref_day+1)
obs_median_d2d<-obs_day$Mean[obs_day$wkday==fut_day]-obs_day$Mean[obs_day$wkday==ref_day]
obs_median6h<-median(obs_hour$Mean)
adj_day <- obs_hour%>%
mutate(fore_con=(Mean-obs_median6h)+ref_median+obs_median_d2d)%>%
ungroup%>%
select(hour,fore_con)
}else{
obs_median6h<-median(obs_hour$Mean[obs_hour$hour<=6])
adj_day <- obs_hour%>%
mutate(fore_con=(Mean-obs_median6h)+ref_median)%>%
ungroup%>%select(hour,fore_con)
}
adj_day$site<-x
adj_day$fore_con<-round(adj_day$fore_con)
adj_day$fore_con[adj_day$fore_con<0]<-0
return(adj_day)
},error = function(e) { print("FAILED")})
print(paste(x))
return(NULL)
}))
}
DB_parques<-Forecast_update()
# Sites
Sites<-c(
"PM2.5_BOG_FON_Hayuelos_E01",
"PM2.5_BOG_CHA_Virrey_E01",
"PM2.5_BOG_ENG_Tibabuyes_E08",
"PM2.5_BOG_TUN_EstacionTunal",
"PM2.5_BOG_TEU_Salitre_E02",
"PM2.5_BOG_ENG_SML_E05",
"PM2.5_BOG_ENG_EstacionFerias",
"PM2.5_BOG_KEN_EstacionKennedy"
)
get_CanAirIO<-function(site,
days=500,
pollutant="pm25"){
# Creating Connection file for inFlux
conn<-influx_connection(host = "influxdb.canair.io")
data<-data.frame(influx_select(con = conn,
db = "canairio",
measurement = paste0("\"",site,"\""),
where = paste0("time >= now() - ",days,"d"),
return_xts = FALSE,
field_keys = paste0("time, ",pollutant),
group_by = "*",simplifyList = TRUE))
return(data)
}
Forecast_update<-function(){
# Process hourly medians
DB_parques<-do.call(rbind,lapply(Sites, function(x){
adj_day<-NULL
tryCatch({
data<-get_CanAirIO(x,days = 24)%>%
select(time,pm25)%>%
rename(date=time)%>%
mutate(pm25=ifelse(pm25>1e5,NA,pm25)) # Readings above 1e5 are discarded
qxts <- xts(data[,-1], order.by=data[,1])
hqxts<-period.apply(qxts, endpoints(qxts, "hours"), median,na.rm = TRUE)
hqxts<-xts::align.time(hqxts,3600)
summ_data<-data.frame(date=index(hqxts),pm25=coredata(hqxts))
Observed_trends<-openair::timeVariation(summ_data,pollutant = "pm25",main=x,local.tz = "America/Bogota",)
obs_hour<-Observed_trends$data$hour
obs_day<-Observed_trends$data$day
date_for_adj <-force_tz(Sys.Date()-ifelse(hour(force_tz(Sys.time(),
tzone = "America/Bogota"))<6,1,0),
tzone = "America/Bogota")
#Calculating the median for the current day or the day before if it is earlier than 6:00 am GMT-5
ref_median<-median(summ_data$pm25[summ_data$date>date_for_adj])
if(hour(force_tz(Sys.time(),
tzone = "America/Bogota"))<6){
ref_day<-match(weekdays(force_tz(Sys.Date()-ifelse(hour(force_tz(Sys.time(),
tzone = "America/Bogota"))<6,1,0),
tzone = "America/Bogota"),abbreviate = TRUE),table = c("Mon","Tue","Wed","Thu","Fri","Sat","Sun"))
fut_day<-ifelse(ref_day==7,1,ref_day+1)
obs_median_d2d<-obs_day$Mean[obs_day$wkday==fut_day]-obs_day$Mean[obs_day$wkday==ref_day]
obs_median6h<-median(obs_hour$Mean)
adj_day <- obs_hour%>%
mutate(fore_con=(Mean-obs_median6h)+ref_median+obs_median_d2d)%>%
ungroup%>%
select(hour,fore_con)
}else{
obs_median6h<-median(obs_hour$Mean[obs_hour$hour<=6])
adj_day <- obs_hour%>%
mutate(fore_con=(Mean-obs_median6h)+ref_median)%>%
ungroup%>%select(hour,fore_con)
}
adj_day$site<-x
adj_day$fore_con<-round(adj_day$fore_con)
adj_day$fore_con[adj_day$fore_con<0]<-0
return(adj_day)
},error = function(e) { print("FAILED")})
print(paste(x))
return(NULL)
}))
}
DB_parques<-Forecast_update()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+geom_smooth()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+geom_line()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+geom_line()+geom_hline(yintercept = 0,size=2)
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+geom_line()+geom_hline(yintercept = 0,size=2)+theme_minimal()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+geom_line()+geom_hline(yintercept = 0,size=2)+theme_bw()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+geom_line()+geom_hline(yintercept = 0,size=2)+theme_test()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+
geom_line()+
geom_hline(yintercept = 0,size=2)+theme_void()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+
geom_line()+
geom_hline(yintercept = 0,size=2)+theme_linedraw()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+
geom_line()+
geom_hline(yintercept = 0,size=2)+
theme_bw()
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+
geom_line()+
geom_hline(yintercept = 0,size=2)+
theme_bw()+
labs(x="Hora",
y="PM2.5 ug/m3")
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+
geom_line()+
geom_hline(yintercept = 0,size=2)+
theme_bw()+
labs(x="Hora",
y="PM2.5 ug/m3")+
scale_x_continuous(breaks = 0:23)
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+
geom_line()+
geom_hline(yintercept = 0,size=2)+
theme_bw()+
labs(x="Hora",
y="PM2.5 ug/m3")+
scale_x_continuous(breaks = 0:23)+
theme(panel.grid.major.y = element_blank())
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+
geom_line()+
geom_hline(yintercept = 0,size=2)+
theme_bw()+
labs(x="Hora",
y="PM2.5 ug/m3")+
scale_x_continuous(breaks = 0:23)+
theme(panel.grid.major.x = element_blank())
DB_parques%>%filter(site=="PM2.5_BOG_KEN_EstacionKennedy")%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+
geom_line()+
geom_hline(yintercept = 0,size=2)+
theme_bw()+
labs(x="Hora",
y="PM2.5 ug/m3")+
scale_x_continuous(breaks = 0:23)+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
# Trend  ------------------------------------------------------------------
plot_trend<-function(x){
y<-DB_parques%>%
filter(site==parques_canarios$Canario[parques_canarios$ID_PARQUE==x])%>%
select(-site)%>%
ggplot(aes(x=hour,y=fore_con))+
geom_line()+
geom_hline(yintercept = 0,size=2)+
theme_bw()+
labs(x="Hora",
y="PM2.5 ug/m3")+
scale_x_continuous(breaks = 0:23)+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
return(y)
}
runApp()
x<-"PM2.5_BOG_ENG_EstacionFerias"
data<-get_CanAirIO(x,days = 24)%>%
select(time,pm25)%>%
rename(date=time)%>%
mutate(pm25=ifelse(pm25>1e5,NA,pm25))
View(data)
qxts <- xts(data[,-1], order.by=data[,1])
hqxts<-period.apply(qxts, endpoints(qxts, "hours"), median,na.rm = TRUE)
hqxts<-xts::align.time(hqxts,3600)
summ_data<-data.frame(date=index(hqxts),pm25=coredata(hqxts))
Observed_trends<-openair::timeVariation(summ_data,pollutant = "pm25",main=x,local.tz = "America/Bogota",)
obs_hour<-Observed_trends$data$hour
obs_day<-Observed_trends$data$day
date_for_adj <-force_tz(Sys.Date()-ifelse(hour(force_tz(Sys.time(),
tzone = "America/Bogota"))<6,1,0),
tzone = "America/Bogota")
#Calculating the median for the current day or the day before if it is earlier than 6:00 am GMT-5
ref_median<-median(summ_data$pm25[summ_data$date>date_for_adj])
ref_median
date_for_adj
ref_median
ref_day<-match(weekdays(force_tz(Sys.Date()-ifelse(hour(force_tz(Sys.time(),
tzone = "America/Bogota"))<6,1,0),
tzone = "America/Bogota"),abbreviate = TRUE),table = c("Mon","Tue","Wed","Thu","Fri","Sat","Sun"))
fut_day<-ifelse(ref_day==7,1,ref_day+1)
obs_median_d2d<-obs_day$Mean[obs_day$wkday==fut_day]-obs_day$Mean[obs_day$wkday==ref_day]
obs_median_d2d
obs_median6h<-median(obs_hour$Mean)
adj_day <- obs_hour%>%
mutate(fore_con=(Mean-obs_median6h)+ref_median+obs_median_d2d)%>%
ungroup%>%
select(hour,fore_con)
adj_day
get_CanAirIO<-function(site,
time=500,
unit="d",
pollutant="pm25"){
# Creating Connection file for inFlux
conn<-influx_connection(host = "influxdb.canair.io")
data<-data.frame(influx_select(con = conn,
db = "canairio",
measurement = paste0("\"",site,"\""),
where = paste0("time >= now() - ",days,unit),
return_xts = FALSE,
field_keys = paste0("time, ",pollutant),
group_by = "*",simplifyList = TRUE))
return(data)
}
last_hour<-function(x){
y<-get_CanAirIO(x,time = 2,unit = "h")
return(mean(y$pm25))
}
last_hour<-function(x){
y<-get_CanAirIO(x,time = 2,unit = "h")
return(mean(y$pm25))
}
last_hour("PM2.5_BOG_FON_Hayuelos_E01")
get_CanAirIO<-function(site,
time=500,
unit="d",
pollutant="pm25"){
# Creating Connection file for inFlux
conn<-influx_connection(host = "influxdb.canair.io")
data<-data.frame(influx_select(con = conn,
db = "canairio",
measurement = paste0("\"",site,"\""),
where = paste0("time >= now() - ",days,unit),
return_xts = FALSE,
field_keys = paste0("time, ",pollutant),
group_by = "*",simplifyList = TRUE))
return(data)
}
x<-"PM2.5_BOG_FON_Hayuelos_E01"
y<-get_CanAirIO(x,time = 2,unit = "h")
get_CanAirIO(x,time = 2,unit = "h")
y <- get_CanAirIO(x,time = 2, unit = "h")
get_CanAirIO<-function(site,
days=500,
pollutant="pm25"){
# Creating Connection file for inFlux
conn<-influx_connection(host = "influxdb.canair.io")
data<-data.frame(influx_select(con = conn,
db = "canairio",
measurement = paste0("\"",site,"\""),
where = paste0("time >= now() - ",days,"d"),
return_xts = FALSE,
field_keys = paste0("time, ",pollutant),
group_by = "*",simplifyList = TRUE))
return(data)
}
get_CanAirIO(x,days = 1)
y<-get_CanAirIO(x,days = 1)%>%
select(time,pm25)%>%
rename(date=time)
y<-get_CanAirIO(x,days = 1)%>%
select(time,pm25)%>%
rename(date=time)%>%
mutate(date=wiht_tz(date,tzone = "America/Bogota"))
y<-get_CanAirIO(x,days = 1)%>%
select(time,pm25)%>%
rename(date=time)%>%
mutate(date=with_tz(date,tzone = "America/Bogota"))
y
Sys.time()-1
Sys.time()-2
Sys.time()-3600
y<-get_CanAirIO(x,days = 1)%>%
select(time,pm25)%>%
rename(date=time)%>%
filter(date>Sys.time()-3600)
y
y<-get_CanAirIO(x,days = 1)%>%
select(time,pm25)%>%
rename(date=time)%>%
filter(date>Sys.time()-3600)
mean(y$pm25)
y<-get_CanAirIO(x,days = 1)%>%
select(time,pm25)%>%
rename(date=time)%>%
filter(date>Sys.time()-3600)
mean(y$pm25)%>%
round(1)
return(y)
last_hour<-function(x){
y<-get_CanAirIO(x,days = 1)%>%
select(time,pm25)%>%
rename(date=time)%>%
filter(date>Sys.time()-3600)
mean(y$pm25)%>%
round(1)
return(y)
}
runApp()
